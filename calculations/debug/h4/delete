 ---------------------------------------------------------
                                                          
                      Using Pyscf:
                                                          
 ---------------------------------------------------------
                                                          
converged SCF energy = -1.71399863825994

System and Method:

    H 0 0 0
    H 0 0 1.5
    H 0 1.5 0
    H 0 1.5 1.5
    
Basis set                                      :       sto3g
Number of Orbitals                             :         4
Number of electrons                            :         4
Nuclear Repulsion                              :    1.9100522882 
Electronic SCF energy                          :   -3.6240509264 
SCF Energy                                     :   -1.7139986383
 AO->MO
 NElectrons:    2    2
 ecore:   0.00000000
 ERIs in the active-space:
(4, 4, 4, 4)    0.00204800 Mb
 n_orb:    4
 n_a  :    2
 n_b  :    2
 HF Energy:  -1.71399864
 Build reference state with    2 alpha and    2 beta electrons [0, 2, 1, 3]
 State    0:  -1.95512501 au  <S2>:   0.00000000
 Form singlet GSD operators
 Number of operators:  66
           (1' 0  ) : 00 11 00 11 
           (2' 0  ) : 00 11 00 11 
           (3' 0  ) : 00 11 00 11 
           (2' 1  ) : 00 11 00 11 
           (3' 1  ) : 00 11 00 11 
           (3' 2  ) : 00 11 00 11 
     (0' 0' 1  0  ) : 1010 0110 1010 1001 
     (0' 0' 2  0  ) : 1010 0110 1010 1001 
     (0' 0' 3  0  ) : 1010 0110 1010 1001 
     (0' 0' 1  1  ) : 1010 1010 
     (0' 0' 2  1  ) : 1010 0110 1010 1001 
     (0' 0' 3  1  ) : 1010 0110 1010 1001 
     (0' 0' 2  2  ) : 1010 1010 
     (0' 0' 3  2  ) : 1010 0110 1010 1001 
     (0' 0' 3  3  ) : 1010 1010 
     (1' 0' 2  0  ) : 0000 1111 1010 0101 1001 0110 0000 1111 1010 0101 0110 1001 
     (1' 0' 2  0  ) : 1010 0101 1001 0110 1010 0101 0110 1001 
     (1' 0' 3  0  ) : 0000 1111 1010 0101 1001 0110 0000 1111 1010 0101 0110 1001 
     (1' 0' 3  0  ) : 1010 0101 1001 0110 1010 0101 0110 1001 
     (1' 0' 1  1  ) : 1010 1001 1010 0110 
     (1' 0' 2  1  ) : 0000 1111 1010 0101 1001 0110 0000 1111 1010 0101 0110 1001 
     (1' 0' 2  1  ) : 1010 0101 1001 0110 1010 0101 0110 1001 
     (1' 0' 3  1  ) : 0000 1111 1010 0101 1001 0110 0000 1111 1010 0101 0110 1001 
     (1' 0' 3  1  ) : 1010 0101 1001 0110 1010 0101 0110 1001 
     (1' 0' 2  2  ) : 1010 1001 1010 0110 
     (1' 0' 3  2  ) : 0000 1111 1010 0101 1001 0110 0000 1111 1010 0101 0110 1001 
     (1' 0' 3  2  ) : 1010 0101 1001 0110 1010 0101 0110 1001 
     (1' 0' 3  3  ) : 1010 1001 1010 0110 
     (2' 0' 3  0  ) : 0000 1111 1010 0101 1001 0110 0000 1111 1010 0101 0110 1001 
     (2' 0' 3  0  ) : 1010 0101 1001 0110 1010 0101 0110 1001 
     (2' 0' 1  1  ) : 1010 1001 1010 0110 
     (2' 0' 2  1  ) : 0000 1111 1010 0101 1001 0110 0000 1111 1010 0101 0110 1001 
     (2' 0' 2  1  ) : 1010 0101 1001 0110 1010 0101 0110 1001 
     (2' 0' 3  1  ) : 0000 1111 1010 0101 1001 0110 0000 1111 1010 0101 0110 1001 
     (2' 0' 3  1  ) : 1010 0101 1001 0110 1010 0101 0110 1001 
     (2' 0' 2  2  ) : 1010 1001 1010 0110 
     (2' 0' 3  2  ) : 0000 1111 1010 0101 1001 0110 0000 1111 1010 0101 0110 1001 
     (2' 0' 3  2  ) : 1010 0101 1001 0110 1010 0101 0110 1001 
     (2' 0' 3  3  ) : 1010 1001 1010 0110 
     (3' 0' 1  1  ) : 1010 1001 1010 0110 
     (3' 0' 2  1  ) : 0000 1111 1010 0101 1001 0110 0000 1111 1010 0101 0110 1001 
     (3' 0' 2  1  ) : 1010 0101 1001 0110 1010 0101 0110 1001 
     (3' 0' 3  1  ) : 0000 1111 1010 0101 1001 0110 0000 1111 1010 0101 0110 1001 
     (3' 0' 3  1  ) : 1010 0101 1001 0110 1010 0101 0110 1001 
     (3' 0' 2  2  ) : 1010 1001 1010 0110 
     (3' 0' 3  2  ) : 0000 1111 1010 0101 1001 0110 0000 1111 1010 0101 0110 1001 
     (3' 0' 3  2  ) : 1010 0101 1001 0110 1010 0101 0110 1001 
     (3' 0' 3  3  ) : 1010 1001 1010 0110 
     (1' 1' 2  1  ) : 1010 0110 1010 1001 
     (1' 1' 3  1  ) : 1010 0110 1010 1001 
     (1' 1' 2  2  ) : 1010 1010 
     (1' 1' 3  2  ) : 1010 0110 1010 1001 
     (1' 1' 3  3  ) : 1010 1010 
     (2' 1' 3  1  ) : 0000 1111 1010 0101 1001 0110 0000 1111 1010 0101 0110 1001 
     (2' 1' 3  1  ) : 1010 0101 1001 0110 1010 0101 0110 1001 
     (2' 1' 2  2  ) : 1010 1001 1010 0110 
     (2' 1' 3  2  ) : 0000 1111 1010 0101 1001 0110 0000 1111 1010 0101 0110 1001 
     (2' 1' 3  2  ) : 1010 0101 1001 0110 1010 0101 0110 1001 
     (2' 1' 3  3  ) : 1010 1001 1010 0110 
     (3' 1' 2  2  ) : 1010 1001 1010 0110 
     (3' 1' 3  2  ) : 0000 1111 1010 0101 1001 0110 0000 1111 1010 0101 0110 1001 
     (3' 1' 3  2  ) : 1010 0101 1001 0110 1010 0101 0110 1001 
     (3' 1' 3  3  ) : 1010 1001 1010 0110 
     (2' 2' 3  2  ) : 1010 0110 1010 1001 
     (2' 2' 3  3  ) : 1010 1010 
     (3' 2' 3  3  ) : 1010 1001 1010 0110 
 Reference Energy:  -1.71399864
 Generate Sparse Matrices for operators in pool
 Start ADAPT-VQE algorithm
 Now start to grow the ansatz




 --------------------------------------------------------------------------
                         ADAPT-VQE iteration:  0
 --------------------------------------------------------------------------
singles [-1.0 [0^ 4] +
1 [4^ 0], -1.0 [1^ 5] +
1 [5^ 1], -1.0 [0^ 6] +
1 [6^ 0], -1.0 [1^ 7] +
1 [7^ 1], -1.0 [2^ 4] +
1 [4^ 2], -1.0 [3^ 5] +
1 [5^ 3], -1.0 [2^ 6] +
1 [6^ 2], -1.0 [3^ 7] +
1 [7^ 3]]
